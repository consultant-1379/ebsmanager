<project name="ebsmanager" default="compile" xmlns:sonar="antlib:org.sonar.ant">

  <property name="pack.name" value="ebsmanager"/>
  <property name="pack.version" value="5-0-0"/>
 
  <property name="vobs.3pp" value="/proj/eiffel013_config_fem6s11/3pp"/>
  <!-- Attention! pack.dir have to be under tmp-dir because the actual build is done there --> 
  <property name="pack.dir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/ebsmanager/dev"/>

  <!-- ENIQ Jars -->
  <property name="eniq.common_utilities.dir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/common_utilities/build/common_utilities/"/>
  <property name="eniq.repository.dir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/repository/build/repository/"/>
  <property name="eniq.dwh_manager.dir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/dwh_manager/build/dwh_manager/"/>
  <property name="eniq.engine.dir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/engine/build/engine/"/>
  <property name="eniq.scheduler.dir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/scheduler/build/scheduler/"/>
  <property name="eniq.tp_ide.dir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/tp_ide/build/tp_ide/"/>

  <!-- 3PP Jars -->
  <property name="3pp.servlet.dir" value="${vobs.3pp}/apache/tomcat/v8_5_76/prod"/> <!-- servlet-api.jar ? -->
  <property name="3pp.velocity.dir" value="${vobs.3pp}/apache/jakarta_velocity/v1_5/prod"/>
  <property name="3pp.xerces_impl.dir" value="${vobs.3pp}/apache/xerces_impl/v2_0_2/prod"/>
  <property name="3pp.xmlapi.dir" value="${vobs.3pp}/apache/xml_commons/v1_4_01/prod"/>
	
	<property name="bointf.keystore" value="/proj/eiffel013_config_fem6s11/build/DCKeystore"/>
	<property name="bointf.jarname" value="bointf.jar"/>

<!-- Installation fast fix 30.1.2009 ebsmanager zip missing jconn.jar lmflhe -->
<!-- NOTE! This needs to be investigated if these jars is really needed in the zip -->
 
<!-- Installation fix end -->

  
  <target name="precompile"/>
  
  <target name="compile">
    <mkdir dir="${pack.dir}/classes"/>
    <javac srcdir="${pack.dir}/src" destdir="${pack.dir}/classes" failonerror="true" debug="on" optimize="off" deprecation="off">
<compilerarg value="-Xlint:all" />
<compilerarg line="-Xmaxwarns 1000" />
      <classpath>
        <pathelement path="${classpath}"/>
            <fileset dir="${eniq.common_utilities.dir}">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${eniq.repository.dir}">
            	<include name="**/*.jar"/>
            </fileset>
            <fileset dir="${eniq.dwh_manager.dir}">
            	<include name="**/*.jar"/>
            </fileset>
            <fileset dir="${eniq.engine.dir}">
            	<include name="**/*.jar"/>
            </fileset>
            <fileset dir="${eniq.scheduler.dir}">
            	<include name="**/*.jar"/>
            </fileset>
            <fileset dir="${eniq.tp_ide.dir}">
            	<include name="**/*.jar"/>
            </fileset>
            <fileset dir="${3pp.servlet.dir}">
            	<include name="**/*.jar"/>
            </fileset>
            <fileset dir="${3pp.velocity.dir}">
            	<include name="**/*.jar"/>
            </fileset>
            <fileset dir="${3pp.xerces_impl.dir}">
            	<include name="**/*.jar"/>
            </fileset>
            <fileset dir="${3pp.xmlapi.dir}">
            	<include name="**/*.jar"/>
            </fileset>
      </classpath>
    </javac>
	<jar destfile="${pack.dir}/webstart/lib/${bointf.jarname}">
		<fileset dir="${pack.dir}/jar/">
			<exclude name="*.xml"/>
		</fileset>
	</jar>
	<signjar keystore="${bointf.keystore}" alias="ETLC" storepass="DCkeyStoreSalaSana" jar="${pack.dir}/webstart/lib/${bointf.jarname}">
	</signjar>
  </target>

  <target name="postcompile">
    <copy file="${pack.dir}/classes/com/ericsson/eniq/etl/handler/WebstartServlet.class" todir="${pack.dir}/dclib/com/ericsson/eniq/etl/handler"/>
  	<copy file="${pack.dir}/classes/com/ericsson/eniq/etl/handler/UniverseUpdateCSPFilter.class" todir="${pack.dir}/dclib/com/ericsson/eniq/etl/handler"/>

<!-- Installation fast fix 30.1.2009 ebsmanager zip missing jconn jar lmflhe -->
<!-- NOTE! This needs to be investigated if these jars is really needed in the zip -->
      
<!-- Installation fix end -->

  </target>
  
  <!-- ========= Define the main properties of this project ========= -->
  <property name="src.dir" value="src" />
  <property name="build.dir" value="target" />
  <property name="classes.dir" value="${build.dir}/classes" />

  <!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
  <property name="sonar.host.url" value="https://sonarqube.lmera.ericsson.se" />

  <!-- Define the Sonar properties -->
  <property name="sonar.projectKey" value="sonarqube-scanner-ebsmanager" />
  <property name="sonar.projectName" value="Eniq Ebsmanager" />
  <property name="sonar.projectVersion" value="1.0" />
  <property name="sonar.sources" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/ebsmanager/dev/src" />
  <property name="sonar.java.binaries" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/ebsmanager/dev" />
  <property name="sonar.sourceEncoding" value="UTF-8" />
  <property name="sonar.login" value="b140730794b2b53dc841840498358c11213d3ba9" />
  <property name="sonar.projectBaseDir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_ebsmanager_build/ebsmanager/dev" />

  <target name="compile_sonar">
      <javac srcdir="${pack.dir}/src" destdir="${pack.dir}/classes" fork="true" debug="true" includeAntRuntime="false" />
  </target>

  <!-- ========= Define SonarQube Scanner for Ant Target ========= -->
  <target name="sonar" depends="compile">
      <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
          <!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
          <classpath path="/proj/esjkadm100/Sonar/sonarqube-ant-task-2.7.0.1612.jar" />
      </taskdef>

      <!-- Execute SonarQube Scanner for Ant Analysis -->
      <sonar:sonar />
  </target>
    <target name="clean">
        <delete dir="${pack.dir}/classes"/>
    </target>

  <!-- ========= The main target "all" ========= -->
  <target name="all_sonar" depends="compile,sonar,clean" />



<target name="sonarQualityCheck" description="SonarQube Quality Gate check"> 
	 <exec executable="/bin/sh" outputproperty="qualitySleep"> 
		 <arg value="-c" /> 
		 <arg value="sleep 60" /> 
	 </exec>
	<exec executable="curl" outputproperty="sonarreturnCode">
		<arg value="-o" />
		<arg value="/proj/esjkadm100/Sonar/sonarOut.txt" />
		<arg value="-k" />
        <arg value="-u" />
        <arg value="${sonar.login}:" />
        <arg value="https://sonarqube.lmera.ericsson.se/api/qualitygates/project_status?projectKey=${sonar.projectKey}" />
    </exec>
    <exec executable="/bin/sh" outputproperty="sonarCode">
        <arg value="-c" />
        <arg value="/proj/eiffel013_config_fem6s11/tools/sonarQualityGateCheck.sh ${jobname}" />
    </exec>
    <echo message="Quality report returned ${sonarCode}"/>
    <condition property="qualityMatch">
            <equals arg1="${sonarCode}" arg2="ERROR"/>
    </condition>
    <fail if="qualityMatch" message="Quality check did not pass, hence marking build as failed!!!."/>
</target>

</project>
